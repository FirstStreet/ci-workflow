name: Deploy Targeted
on:
  workflow_call:
    inputs:
      appname:
        required: true
        type: string
      helm_name:
        required: true
        type: string
      namespace:
        required: true
        type: string
      helm_config:
        required: true
        type: string
      use_ssm:
        default: true
        required: false
        type: boolean
      simple_deploy:
        default: false
        required: false
        type: boolean
      eks_cluster:
        default: potato-pie
        required: false
        type: string
      aws_role_to_assume:
        required: true
        type: string
      aws_role_session_name_prefix:
        required: false
        type: string
      use_1pass:
        description: "When true injects 1password secrets into the config file and deployment values file. Only works for config files when simple_deploy=false. Example project: https://github.com/FirstStreet/onpass-test"
        type: boolean
        required: false
        default: false
    secrets:
      OP_SERVICE_ACCOUNT_TOKEN:
        required: false
        description: "1Password service account token"

env:
  APP_NAME: ${{ inputs.appname }}
  HELM_NAME: ${{ inputs.helm_name }}
  NAMESPACE: ${{ inputs.namespace }}
  HELM_CONFIG: ${{ inputs.helm_config }}
  SIMPLE_DEPLOY: ${{ inputs.simple_deploy }}
  USE_SSM: ${{ inputs.use_ssm }}
  USE_1PASS: ${{ inputs.use_1pass }}
  OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

jobs:
  Deploy:
    runs-on: ubuntu-latest
    permissions:
        id-token: write
        contents: read
    # environment: ${{needs.Build.outputs.appenv}}
    steps:
      - uses: actions/checkout@v3

      - name: Prepare deployment
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

        run: |
          echo "VALUES=_k/${APP_NAME}/values-${HELM_CONFIG}.yaml" >> $GITHUB_ENV
          echo "CONF_ENV=${HELM_CONFIG}" >> $GITHUB_ENV
          echo "NAMESPACE=${NAMESPACE}" >> $GITHUB_ENV

      - uses: azure/setup-kubectl@v3
        with:
          version: "v1.25.2"

      - uses: actions/setup-node@v3
      - uses: azure/setup-helm@v3
        with:
          version: "v3.6.0" # default is latest stable

      - name: ConfigureAWSCredentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: us-east-1
          role-to-assume: ${{ inputs.aws_role_to_assume }}
          role-session-name:  ${{ inputs.aws_role_session_name_prefix }}GithubActions-${{ github.event.repository.name }}-${{ inputs.helm_name }}

      - name: Deploying Namespace
        run: |
          echo $NAMESPACE
          echo $VALUES

      - name: Configure kubernetes cluster
        run: |
          aws eks update-kubeconfig --name ${{ inputs.eks_cluster }}

      - name: Configure 1Password secret-injector
        # installs OP secret-injector that replaces secrets in "values-*.yaml" files
        # needs OP connect server in the cluster and op connect token secret configured in the namespace - this can also be either manual or we can script so it's copied to other namespaces from a known secret in a known namespace
        # https://developer.1password.com/docs/connect/k8s-injector/
        if:  env.USE_1PASS == 'true'
        run: |

          # TODO: do we want to upgrade every time or we want to manually manage it? It's per namespace
          helm repo add 1password https://1password.github.io/connect-helm-charts
          helm upgrade --install secrets-injector 1password/secrets-injector --namespace $NAMESPACE

          kubectl label namespace $NAMESPACE secrets-injection=enabled

      - name: Install 1Password CLI
        # installs OP CLI so we can run 'op inject' to replace secrets in app config files
        # https://developer.1password.com/docs/cli/reference/commands/inject
        if:  env.USE_1PASS == 'true' && env.SIMPLE_DEPLOY == 'false'
        uses: 1password/install-cli-action@v1

      - name: 1Password CLI
        if:  env.USE_1PASS == 'true' && env.SIMPLE_DEPLOY == 'false'
        run: |

          # authenticate and replace secrets in app config file
          # can authenticate either with service account token or with connect server credentials
          op inject -i _k/${APP_NAME}/appconfig/${CONF_ENV}.conf -o _k/${APP_NAME}/appconfig/${CONF_ENV}.conf.op
          mv _k/${APP_NAME}/appconfig/${CONF_ENV}.conf.op _k/${APP_NAME}/appconfig/${CONF_ENV}.conf

      - name: Deploy
        run: |

          if [[ $USE_SSM == true ]]; then
            helm plugin remove ssm || true
            helm plugin add https://github.com/seripap/helm-ssm || true
            helm ssm -f $VALUES
          fi

          sed -i "s/^appVersion:.*$/appVersion: \"$(git describe)\"/" _k/$APP_NAME/Chart.yaml

          if [[ $SIMPLE_DEPLOY == true ]]; then
            helm upgrade $HELM_NAME _k/$APP_NAME --install --namespace $NAMESPACE --set app.image.tag=sha-$GITHUB_SHA-$NAMESPACE -f $VALUES --wait --timeout 300s --debug
          else
            helm upgrade $HELM_NAME _k/$APP_NAME --install --namespace $NAMESPACE --set app.image.tag=sha-$GITHUB_SHA-$NAMESPACE,app.config=$CONF_ENV,volume.path=$CONF_ENV.conf -f $VALUES --wait --timeout 300s --debug
          fi

      - name: Cleanup conf with secrets
        if: always()
        run: |
          rm _k/${APP_NAME}/appconfig/${CONF_ENV}.conf