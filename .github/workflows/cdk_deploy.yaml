name: CDK Deploy

on:
  workflow_call:
    inputs:
      aws_region:
        required: true
        type: string
      subtree_repo:
        required: false
        type: string
        default: FirstStreet/fs-deployment-pipeline
      subtree_path:
        required: false
        type: string
        default: deployments
      subtree_ref:
        required: false
        type: string
        default: main
      deploy_ecr:
        required: true
        type: boolean
      deploy_docker_image:
        required: true
        type: boolean
      deploy_batch:
        required: true
        type: boolean
      runs_on:
        required: false
        type: string
        default: ubuntu-latest

      env: 
        required: true
        type: string
      region:
        required: true
        type: string
      stack_id_prefix:
        required: true
        type: string
      ecr_repo_name:
        required: false
        type: string

    secrets:
      SUBTREE_TOKEN:
        required: true

jobs:
  Build:
    runs-on: ${{ inputs.runs_on }}
    env:
      ENV: ${{ inputs.env }}
      REGION: ${{ inputs.region }}
      STACK_ID_PREFIX: ${{ inputs.stack_id_prefix }}
      ECR_REPO_NAME: ${{ inputs.ecr_repo_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: checkout subtree
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.subtree_repo }}
          token: ${{ secrets.SUBTREE_TOKEN }}
          ref: ${{ inputs.subtree_ref }}
          path: ${{ inputs.subtree_path }}

      - name: Setup Env
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4.0.3
        with:
          role-to-assume: arn:aws:iam::276656326065:role/GitHubAction-AssumeRoleWithAction
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ inputs.aws_region }}

      - name: go mods
        run: |
          cd deployments 
          go mod tidy      
          go mod vendor
          cd ..  

      - name: Install deployment dependencies
        run: npm install -g aws-cdk 

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0

      - name: Deploy ECR
        if: ${{ inputs.deploy_ecr }}
        run: |
          export COMPONENT=ecr
          cd deployments 
          cdk deploy --require-approval never --app "go mod download && go run ./deployments/deployModels.go ./deployments/helpers.go ./deployments/deploy.go"
          cd ..
      
      - name: Deploy Docker
        if: ${{ inputs.deploy_docker_image }}
        run: |
          export COMPONENT=docker
          cd deployments
          cdk deploy --require-approval never --app "go mod download && go run ./deployments/deployModels.go ./deployments/helpers.go ./deployments/deploy.go"
          cd ..
      
      - name: Deploy Batch
        if: ${{ inputs.deploy_batch }}
        run: |
          export COMPONENT=batch
          cd deployments 
          cdk deploy --require-approval never --app "go mod download && go run ./deployments/deployModels.go ./deployments/helpers.go ./deployments/deploy.go"
          cd ..

        
