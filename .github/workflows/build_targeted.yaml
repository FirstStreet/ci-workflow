name: Build Targeted
on:
  workflow_call:
    inputs:
      namespace:
        required: true
        type: string
      dockerfile:
        default: "Dockerfile"
        required: false
        type: string
      needs_subtree:
        default: false
        required: false
        type: boolean
      subtree_repo:
        default: ""
        required: false
        type: string
      subtree_path:
        default: ""
        required: false
        type: string
      subtree_ref:
        default: main
        required: false
        type: string
      image_tag:
        default: "build"
        required: false
        type: string
      var_replace_find:
        default: ""
        required: false
        type: string
      var_replace_with:
        default: ""
        required: false
        type: string
      var_replace_include:
        default: ""
        required: false
        type: string
      op_env_file:
        default: ""
        required: false
        type: string
      op_env_file_out:
        default: ".env"
        required: false
        type: string
      force_docker_push:
        default: false
        required: false
        type: boolean
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      OP_SERVICE_ACCOUNT_TOKEN:
        required: false
      SUBTREE_TOKEN:
        required: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: ${{ inputs.image_tag }}
  NAMESPACE: ${{ inputs.namespace }}
  DOCKERFILE: ${{ inputs.dockerfile }}
  op_env_file: $ {{ inputs.op_env_file }}
  op_env_file_out: $ {{ inputs.op_env_file_out }}

jobs:
  Build:
    runs-on: aws
    permissions:
      contents: read
      packages: write
    # outputs:
    #   appenv: ${{ steps.setappenv.outputs.env }}

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: checkout subtree
        uses: actions/checkout@v3
        if: ${{ inputs.needs_subtree }}
        with:
          repository: ${{ inputs.subtree_repo }}
          token: ${{ secrets.SUBTREE_TOKEN }}
          path: ${{ inputs.subtree_path }}
          ref: ${{ inputs.subtree_ref }}

      - name: Find and Replace
        if: ${{ inputs.var_replace_find }}
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: ${{ inputs.var_replace_find }}
          include: ${{ inputs.var_replace_include }}
          replace: ${{ inputs.var_replace_with }}
          regex: false

      - name: Setup buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}-${{ env.NAMESPACE }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ github.sha }}-${{ env.NAMESPACE }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.IMAGE_TAG }}
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=long,suffix=-${{ env.NAMESPACE }}

      - name: Install 1Password CLI
        if: ${{ inputs.op_env_file }}
        uses: 1password/install-cli-action@v1

      - name: "Create env file"
        if: ${{ inputs.op_env_file }}
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          file: ${{ inputs.op_env_file }}
          outputf: ${{ inputs.op_env_file_out }}
        run: |
          op document get $file --out-file=$outputf

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ (github.event_name != 'pull_request') || (inputs.force_docker_push == true) }}
          file: ${{ env.DOCKERFILE }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # This only works for pub repos
      # - id: setappenv
      #   run: |
      #     if [[ "$GITHUB_REF_NAME" == *"develop"* ]]; then
      #       echo "::set-output name=DEPLOY_ENV::development"
      #     elif [[ "$GITHUB_REF_NAME" == *"master"* ]]; then
      #       echo "::set-output name=DEPLOY_ENV::production"
      #     fi
